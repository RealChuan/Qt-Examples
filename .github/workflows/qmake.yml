name: QMake Build

on: 
  push:
    paths-ignore:
        - 'cmake/**' 
        - 'docs/**'
        - 'packaging/**'
        - 'translations/**'
        - '**/CMakeLists.txt'
        - '**/*.md'
        - '**/*.txt'
        - '**/.clang-*'
        - '**/.gitignore'
        - '**/LICENSE*'
        - '**/README*'
        - 'vcpkg.json'    
  pull_request:
    paths-ignore:
        - 'cmake/**' 
        - 'docs/**'
        - 'packaging/**'
        - 'translations/**'
        - '**/CMakeLists.txt'
        - '**/*.md'
        - '**/*.txt'
        - '**/.clang-*'
        - '**/.gitignore'
        - '**/LICENSE*'
        - '**/README*'
        - 'vcpkg.json'  

env:
  MACOSX_DEPLOYMENT_TARGET: 13.0
  MACOSX_BUILD_ARCHS: 'x86_64 arm64'
  BUILD_DIR: build

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with: 
          fetch-depth: 1
          
      - uses: ./.github/actions/install-dependencies

      - uses: RealChuan/install-jom@main

      - name: Create build directory
        shell: bash
        run: mkdir -p ${{ env.BUILD_DIR }}

      - name: Build windows
        if: runner.os == 'Windows'
        working-directory: ${{ env.BUILD_DIR }}
        shell: pwsh
        run: |
          ..\packaging\windows\Enter-VsDevShell.ps1
          & qmake ..\.
          & jom
        
      - name: Build linux
        if: runner.os == 'Linux'
        working-directory: ${{ env.BUILD_DIR }}
        shell: bash
        run: |
          qmake ../.
          make -j $(nproc)

      - name: Build macos
        if: runner.os == 'macOS'
        working-directory: ${{ env.BUILD_DIR }}
        shell: bash
        run: |
          qmake QMAKE_APPLE_DEVICE_ARCHS="${{ env.MACOSX_BUILD_ARCHS }}" ../.
          make -j $(sysctl -n hw.ncpu)